#include <LiquidCrystal_I2C.h>
#include <Wire.h>;
#include "DHT.h"
#define DHTTYPE DHT11
#include <SD.h>
LiquidCrystal_I2C lcd1(0x27, 16, 2);
File myFile;
const int DHTPIN = 6;
DHT dht(DHTPIN, DHTTYPE);
const int buttonPrevPin = 5;
const int buttonNextPin = 4;
const int solarPin = A1;
int lastbutton;
int currentDataComponent = 0;
const int moistPin = A0;
float value;
float milliVolt; 
int moistureThreshold = 500;
const int CSPin = 10;
const int waterPumpPin = 9;



void setup() {

 Serial.begin(9600);
  dht.begin();
  lcd1.begin();
  lcd1.backlight();
  pinMode(buttonPrevPin, INPUT);
  pinMode(buttonNextPin, INPUT);
  pinMode(moistPin, INPUT);
  pinMode(solarPin, INPUT);
  pinMode(waterPumpPin, OUTPUT);

Serial.begin(9600);

  Serial.print("Initializing SD card...");
   pinMode(CSPin, OUTPUT);

  if (!SD.begin(CSPin)) {
    Serial.println("initialization failed!");
    return;
  }
  Serial.println("initialization done.");
 
 /*
  myFile = SD.open("test.txt", FILE_WRITE);


  if (myFile) {
    Serial.print("Writing to test.txt...");
    myFile.println("testing 1, 2, 3.");
    myFile.close();
    Serial.println("done.");
  } else {
    Serial.println("error opening test.txt");
  }

*/




}
void displayData() {
 
   float humid = dht.readHumidity();
  float temp = dht.readTemperature();
  lcd1.clear();
  switch (currentDataComponent) {
    case 0:
      lcd1.print("Humidity = ");
      lcd1.setCursor(0,1);
     lcd1.print((float)humid,1);
     lcd1.print("%"); 
      break;
    case 1:
      lcd1.print("Temperature = ");
      lcd1.setCursor(0,1);
      lcd1.print((float)temp,1);
      lcd1.print("C");
      break;
    case 2:
      lcd1.print("Solar = ");
       lcd1.setCursor(0,1);
    lcd1.print(milliVolt);
   lcd1.print("mV");
      break;
    case 3:
      lcd1.print("Moisture = ");
      lcd1.setCursor(0,1);
      lcd1.print(value);
      break;
   
  }
}
void loop() {

  delay(1000);
  
    // push button menu 
if (digitalRead(buttonPrevPin) == HIGH) {
    currentDataComponent = (currentDataComponent + 3) % 4;
    delay(500); 
    displayData();
  } else if (digitalRead(buttonNextPin) == HIGH) {
    currentDataComponent = (currentDataComponent + 1) % 4;
    delay(500);
    displayData();
  }

   float humid = dht.readHumidity();
  float temp = dht.readTemperature();
 value = analogRead(moistPin);
  
  float solarData = analogRead(solarPin);

  conversion(solarData);

  Serial.println(value);
  Serial.print("Humidity = ");
  Serial.print((float)humid,1); // The 1 denotes how many decimal places we want
  Serial.println("%");         // This library can only return 1 decimal place
  Serial.print("Temperature = ");
  Serial.print((float)temp,1);
  Serial.println("C");

  if (value < moistureThreshold) {
    digitalWrite(waterPumpPin, HIGH);
    Serial.println("Soil is dry watering the plant.");
    delay(5000);
  } else {
    digitalWrite(waterPumpPin, LOW);
    Serial.println("Soil moisture is good");
    delay(5000);
  }

    // if the file opened okay, write to it:
myFile = SD.open("test.txt", FILE_WRITE);

  if (myFile) {
      delay(1000);
    Serial.print("Writing to test.txt...");
  myFile.print("Time: ");
  myFile.print("Humidity = ");
     myFile.println(value);
  myFile.print("Humidity = ");
  myFile.print((float)humid,1); // The 1 denotes how many decimal places we want
 myFile.println("%");         // This library can only return 1 decimal place
  myFile.print("Temperature = ");
  myFile.print((float)temp,1);
 myFile.println("C");


    myFile.close();

    Serial.println("done again better.");

  } else {

    // if the file didn't open, print an error:

    Serial.println("error opening test.txt better");

  }
  delay(1000);
  }

void conversion(float sensorValue){

   float voltage = (float)sensorValue * 5 / 1023;

   Serial.print(voltage);

   Serial.println("v");

  milliVolt = voltage * 1000;

   Serial.print(milliVolt);

   Serial.println("mV");

   delay(500);
}
/*
  lcd1.setCursor(0,1);


   if(digitalRead(5) == HIGH){
lcd1.print("button 5 works");
lastbutton = 1;
    }else if (lastbutton == 2){
       delay(5000);
    lcd1.clear();
    }
    
 if(digitalRead(4) == HIGH){
 lcd1.print("button 4 works");
 lastbutton = 2;
    }else if(lastbutton == 1){
       delay(5000);

    lcd1.clear();

*/
    


