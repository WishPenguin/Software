#include <LiquidCrystal_I2C.h>
#include <Wire.h>;
#include "DHT.h"
#define DHTTYPE DHT11
#include <SD.h>
LiquidCrystal_I2C lcd1(0x27, 16, 2);
File myFile;
const int DHTPIN = 6;
DHT dht(DHTPIN, DHTTYPE);
const int buttonPrevPin = 5;
const int buttonNextPin = 4;
const int solarPin = A1;
int lastbutton;
int currentDataComponent = 0;
const int moistPin = A0;
float value;
float milliVolt; 
int moistureThreshold = 500;
const int CSPin = 10;
const int In1 = 9;
const int In2 = 8;
int wateringtimes = 0; 


void setup() {

  Serial.begin(9600);
  dht.begin();
  lcd1.begin();
  lcd1.backlight();
  pinMode(buttonPrevPin, INPUT);
  pinMode(buttonNextPin, INPUT);
  pinMode(moistPin, INPUT);
  pinMode(solarPin, INPUT);
  pinMode(In1, OUTPUT);
  pinMode(In2, OUTPUT);

Serial.begin(9600);

  Serial.print("Initializing SD card...");
   pinMode(CSPin, OUTPUT);

  if (!SD.begin(CSPin)) {
    Serial.println("initialization failed!");
    return;
  }
  Serial.println("initialization done.");
 
 
}
void time(){
long timeNow = millis();
  
 int days = timeNow / day ;                               
 int hours = (timeNow % day) / hour;                      
 int minutes = ((timeNow % day) % hour) / minute ;         
 int seconds = (((timeNow % day) % hour) % minute) / second;
 
   lcd1.print(days,DEC);  
   lcd1.print(hours);  
  lcd1.print(minutes);
   lcd1.print(seconds);
   

}

void displayData() {
 
   float humid = dht.readHumidity();
  float temp = dht.readTemperature();
  lcd1.clear();
  switch (currentDataComponent) {
    case 0:
      lcd1.print("Hum = ");
      lcd1.print((float)humid,1);
      lcd1.print("%"); 
      lcd1.setCursor(0,1);
      lcd1.print("Temp = ");
      lcd1.print((float)temp,1);
      lcd1.print("C");
      break;
    case 1:
     
     
      break;
    case 2:
      lcd1.print("Solar = ");
      lcd1.print(milliVolt);
      lcd1.print("mV");
      lcd1.setCursor(0,1);
      lcd1.print("Mois = ");
      lcd1.print(value);
      break;
    case 3:
     lcd1.print("Plant watered =");
     lcd1.setCursor(0,1);
     lcd1.print(wateringtimes);
      break;
   
  }
}

void printDigits(byte digits){
  // utility function for digital clock display: prints colon and leading 0
  Serial.print(":");
  if(digits < 10)
    Serial.print('0');
  Serial.print(digits,DEC);   
}



void loop() {

  time();
  delay(1000);

if (value < moistureThreshold) {
    digitalWrite(In1, HIGH);
    digitalWrite(In2, LOW);
    Serial.println("Soil is dry watering the plant.");
    wateringtimes = (wateringtimes + 1); 
    delay(5000);
  } else {
    digitalWrite(In1, LOW);
    digitalWrite(In2, LOW);
    Serial.println("Soil moisture is good");
    delay(5000);
  }


    delay(1000);
if (digitalRead(buttonPrevPin) == HIGH) {
    currentDataComponent = (currentDataComponent + 3) % 4;
    delay(500); 
    displayData();
  } else if (digitalRead(buttonNextPin) == HIGH) {
    currentDataComponent = (currentDataComponent + 1) % 4;
    delay(500);
    displayData();
  }

  float humid = dht.readHumidity();
  float temp = dht.readTemperature();
  value = analogRead(moistPin);
  float solarData = analogRead(solarPin);

  conversion(solarData);
  Serial.println(value);
  Serial.print("Humidity = ");
  Serial.print((float)humid,1); 
  Serial.println("%");        
  Serial.print("Temperature = ");
  Serial.print((float)temp,1);
  Serial.println("C");

 

myFile = SD.open("test.txt", FILE_WRITE);

  if (myFile) {
  delay(1000);
  Serial.print("Writing to test.txt...");
  myFile.print("Time: ");
  myFile.print("Humidity = ");
  myFile.println(value);
  myFile.print("Humidity = ");
  myFile.print((float)humid,1); 
  myFile.println("%");         
  myFile.print("Temperature = ");
  myFile.print((float)temp,1);
  myFile.println("C");
  myFile.close();
  Serial.println("done again better.");

  } else {

    Serial.println("error opening test.txt better");

  }
  delay(1000);
  }




void conversion(float sensorValue){

   float voltage = (float)sensorValue * 5 / 1023;

   Serial.print(voltage);
   Serial.println("v");

  milliVolt = voltage * 1000;

   Serial.print(milliVolt);
   Serial.println("mV");
   delay(500);
}

    


